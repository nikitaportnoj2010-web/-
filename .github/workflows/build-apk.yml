name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          openjdk-8-jdk \
          unzip \
          zip \
          python3-pip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33

    - name: Create buildozer.spec
      run: |
        buildozer init
        # Fix the spec file for better compatibility
        sed -i 's/^#android.api = .*/android.api = 28/g' buildozer.spec
        sed -i 's/^#android.minapi = .*/android.minapi = 21/g' buildozer.spec
        sed -i 's/^#android.ndk = .*/android.ndk = 19c/g' buildozer.spec
        sed -i 's/^requirements = .*/requirements = python3,kivy/g' buildozer.spec

    - name: Build APK with Buildozer
      run: |
        buildozer -v android debug

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: android-app
        path: bin/*.apk
        retention-days: 7

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          .buildozer/
        retention-days: 3
